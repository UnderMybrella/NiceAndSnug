buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.50"
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'kotlin'

group = 'dev.brella'
version = '1.0.0'
archivesBaseName = 'NiceAndSnug'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

repositories {
    jcenter()
    maven {
        url "http://maven.shadowfacts.net/"
    }

    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }

    maven { url 'https://maven.blamejared.com' }

    maven { url 'https://maven.tterrag.com' }

    maven { url "https://maven.tehnut.info" }
}

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'stable', version: '39-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    accessTransformers(
            file('src/main/resources/META-INF/jei_at.cfg'),
            file('src/main/resources/META-INF/snug_at.cfg')
    )

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                niceandsnug {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                niceandsnug {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2854'

    // You may put jars on which you depend on in ./libs or you may define them like so..
    // compile "some.group:artifact:version:classifier"
    // compile "some.group:artifact:version"

    compile group: "net.shadowfacts", name: "Forgelin", version: "1.8.4"

    // compile against the JEI API but do not include it at runtime
    compileOnly fg.deobf("mezz.jei:jei_1.12.2:${jei_version}:api")
    // at runtime, use the full JEI jar
    runtimeOnly fg.deobf("mezz.jei:jei_1.12.2:${jei_version}")

//    compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.0-20.108:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.0-21.3")

    // Compile against the Hwyla API, but do not include it at runtime
    compileOnly fg.deobf("mcp.mobius.waila:Hwyla:1.8.26-B41_1.12.2:api")
    // At runtime, use the full Hwyla jar
    runtimeOnly fg.deobf("mcp.mobius.waila:Hwyla:1.8.26-B41_1.12.2")
}

task copyResources(type: Copy) {
//    outputs.upToDateWhen { false }

    String src = sourceSets.getByName("main").resources.srcDirs[0].absolutePath
    String dst = "${buildDir.absolutePath}/classes/kotlin/main"
    println("Src: $src\nDst: $dst")
    from src into dst
}

jar.finalizedBy('reobfJar')

compileJava.dependsOn(copyResources)